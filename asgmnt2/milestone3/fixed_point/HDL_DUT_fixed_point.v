// -------------------------------------------------------------
// 
// File Name: C:\Course_Material\UofT\ECE1718\assignment2\Simulink\MAC_fixed_point_code_gen\MAC_single\HDL_DUT.v
// Created: 2023-03-09 14:57:42
// 
// Generated by MATLAB 9.13 and HDL Coder 4.0
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 0.2
// Target subsystem base rate: 0.2
// 
// 
// Clock Enable  Sample Time
// -- -------------------------------------------------------------
// ce_out        0.2
// -- -------------------------------------------------------------
// 
// 
// Output Signal                 Clock Enable  Sample Time
// -- -------------------------------------------------------------
// out                           ce_out        0.2
// -- -------------------------------------------------------------
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: HDL_DUT
// Source Path: MAC_single/HDL_DUT
// Hierarchy Level: 0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module HDL_DUT
          (clk,
           reset,
           clk_enable,
           in1,
           in2,
           ce_out,
           out);


  input   clk;
  input   reset;
  input   clk_enable;
  input   signed [31:0] in1;  // sfix32_En8
  input   signed [31:0] in2;  // sfix32_En8
  output  ce_out;
  output  signed [64:0] out;  // sfix65_En16


  wire enb;
  wire signed [63:0] Dot_Product_out1;  // sfix64_En16
  reg signed [64:0] Memory_out1;  // sfix65_En16
  wire signed [63:0] Data_Type_Conversion_out1;  // sfix64_En16
  wire signed [64:0] Add_add_cast;  // sfix65_En16
  wire signed [64:0] Add_add_cast_1;  // sfix65_En16
  wire signed [64:0] Add_out1;  // sfix65_En16


  assign Dot_Product_out1 = in1 * in2;



  assign enb = clk_enable;

  assign Data_Type_Conversion_out1 = Memory_out1[63:0];



  assign Add_add_cast = {Dot_Product_out1[63], Dot_Product_out1};
  assign Add_add_cast_1 = {Data_Type_Conversion_out1[63], Data_Type_Conversion_out1};
  assign Add_out1 = Add_add_cast + Add_add_cast_1;



  always @(posedge clk or posedge reset)
    begin : Memory_process
      if (reset == 1'b1) begin
        Memory_out1 <= 65'sh00000000000000000;
      end
      else begin
        if (enb) begin
          Memory_out1 <= Add_out1;
        end
      end
    end



  assign out = Memory_out1;

  assign ce_out = clk_enable;

endmodule  // HDL_DUT

